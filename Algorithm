Initialization and Setup
1.1 Import necessary libraries: time, math, and tkinter.
1.2 Define the dimensions of the clock display (WIDTH and HEIGHT).
1.3 Create the main application window using tkinter.
1.4 Set the title of the application window.
1.5 Create a canvas within the main window to draw the clock.

Function Definition
2.1 Define the update_clock function which updates the clock display every second.

2.2 Inside the update_clock function:
2.2.1 Clear the canvas.
2.2.2 Get the current local time using time.localtime().
2.2.3 Extract the current hour, minute, and second from the local time.

2.3 Draw the clock face:
2.3.1 Draw an oval to represent the clock's border.

2.4 Draw the hour numbers:
2.4.1 Loop from 0 to 11 to place hour numbers around the clock face.
2.4.2 Calculate the angle for each hour mark.
2.4.3 Determine the (x, y) coordinates for placing the hour numbers.
2.4.4 Use canvas.create_text to draw the numbers at calculated positions.

2.5 Draw the minute markers:
2.5.1 Loop from 0 to 59 to place minute markers around the clock face.
2.5.2 Calculate the angle for each minute mark.
2.5.3 Determine the (x1, y1) and (x2, y2) coordinates for drawing the lines.
2.5.4 Use canvas.create_line to draw the minute markers.

2.6 Draw the clock hands:
2.6.1 Calculate the angle and end coordinates for the hour hand.
2.6.2 Draw the hour hand using canvas.create_line.

sql
Copy code
 2.6.3 Calculate the angle and end coordinates for the minute hand.
 2.6.4 Draw the minute hand using `canvas.create_line`.
 
 2.6.5 Calculate the angle and end coordinates for the second hand.
 2.6.6 Draw the second hand using `canvas.create_line`.
2.7 Schedule the update_clock function to run again after 1000 milliseconds (1 second).

Execution
3.1 Call the update_clock function to start the clock.
3.2 Enter the main loop of the application to keep it running
